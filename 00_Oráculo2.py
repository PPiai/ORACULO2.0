import streamlit as st
import requests

TIPOS_ARQUIVOS_VALIDOS = [
    'Tech',
    'Social Media',
    'Gestor de Tr√°fego',
    'Account',
    'Vendas'
]

posi = {'Gestores de Projetos ou Accounts' : 'Respons√°veis pelo planejamento, execu√ß√£o e acompanhamento de projetos. Atuam como ponto de contato entre a equipe interna e os clientes, garantindo que entregas sejam realizadas dentro do prazo e conforme as expectativas. Gerenciam recursos e cronogramas, e solucionam problemas para assegurar o sucesso dos projetos.',
    'Gestores de Tr√°fego' : 'Focados em estrat√©gias de m√≠dia paga e org√¢nica, eles gerenciam campanhas publicit√°rias em plataformas como Google Ads, Facebook Ads, e outros canais de m√≠dia. Trabalham para aumentar o tr√°fego qualificado e otimizar o ROI (Retorno sobre Investimento).',
    'Analista de CRM' : 'Especialista em gerenciar as rela√ß√µes com clientes por meio de sistemas de CRM (Customer Relationship Management). √â respons√°vel por segmentar p√∫blicos, planejar campanhas e otimizar a jornada do cliente para aumentar reten√ß√£o e engajamento.',
    'Designers' : 'Criam materiais visuais, como pe√ßas gr√°ficas, layouts de sites, posts para redes sociais e outros ativos visuais. Trabalham para garantir que a comunica√ß√£o visual esteja alinhada com a identidade da marca e os objetivos estrat√©gicos.',
    'Copywriters' : 'Especialistas em reda√ß√£o persuasiva. Criam textos para an√∫ncios, e-mails, p√°ginas de vendas, blogs e outros materiais, com foco em atrair, engajar e converter leads.',
    'Analista de UX/UI' : 'Respons√°vel pela experi√™ncia do usu√°rio (UX) e design de interface do usu√°rio (UI). Conduz pesquisas, testes e an√°lises para garantir que produtos digitais sejam funcionais, intuitivos e esteticamente agrad√°veis.',
    'Analista de Site' : 'Cuida da manuten√ß√£o, performance e otimiza√ß√£o de sites. Garante que o site esteja funcional, seguro e r√°pido, al√©m de implementar melhorias baseadas em dados de an√°lise de desempenho.',
    'Head' : 'Gestor da vertente ou da equipe, respons√°vel por liderar e gerenciar o time. Define estrat√©gias, alinha metas, supervisiona as entregas e garante que os objetivos da equipe estejam alinhados com os objetivos gerais da empresa. Atua como um elo entre a alta gest√£o e os membros do time.',
    'CAP' : 'Profissional que auxilia a vertente ou o time, proporcionando suporte estrat√©gico e operacional. Trabalha em conjunto com o Head e a equipe para garantir a execu√ß√£o eficiente das tarefas, contribuindo com insights e a√ß√µes pr√°ticas para o sucesso do grupo',
    'Analista de Growth' : 'Focado em identificar oportunidades de crescimento para o neg√≥cio. Trabalha com experimentos, otimiza√ß√µes e estrat√©gias de aquisi√ß√£o e reten√ß√£o de clientes para impulsionar resultados.',
    'Closers' : 'Especialistas em vendas, respons√°veis por finalizar negocia√ß√µes e converter leads em clientes. Possuem alta capacidade de persuas√£o e foco em alcan√ßar metas comerciais.',
    'BDR (Business Development Representative)' : 'Profissionais focados em prospectar e qualificar leads para a equipe de vendas. Trabalham na gera√ß√£o de oportunidades e no fortalecimento de relacionamentos comerciais.',
    'Financeiro' : 'Gerencia os recursos financeiros da empresa. Cuida do fluxo de caixa, or√ßamentos, pagamento de contas, faturamento e planejamento financeiro.',
    'People & Performance' : '√Årea respons√°vel por cuidar das pessoas da empresa. Atua em recrutamento, treinamento, desenvolvimento de colaboradores e gest√£o de desempenho, promovendo um ambiente de trabalho saud√°vel e produtivo.',
    'Analista de BI (Business Intelligence)' : 'Respons√°vel por coletar, organizar e analisar dados para fornecer insights estrat√©gicos que apoiem a tomada de decis√£o. Cria dashboards, relat√≥rios e an√°lises que ajudam a empresa a identificar tend√™ncias, medir resultados e otimizar processos. Trabalha em estreita colabora√ß√£o com outros times para garantir que os dados sejam utilizados de forma eficaz para atingir os objetivos da empresa.'
}

MEMORIA = []

# URLs de exemplo para as √°reas
ARQUIVOS = {
    'Tech': ['https://vendas.v4company.com/glossario-marketing/', 'https://heyzine.com/flip-book/87da189f45.html'],
    'Social Media': ['https://vendas.v4company.com/glossario-marketing/', 'https://v4company.com/marketing-digital/como-criar-criativos-que-convertem'],
    'Gestor de Tr√°fego': ['https://vendas.v4company.com/glossario-marketing/', 'https://heyzine.com/flip-book/87da189f45.html'],
    'Account': ['https://vendas.v4company.com/glossario-marketing/', 'https://heyzine.com/flip-book/87da189f45.html'],
    'Vendas': ['https://vendas.v4company.com/glossario-marketing/', 'https://heyzine.com/flip-book/87da189f45.html'],
}

# Fun√ß√£o para carregar documentos diretamente via requests
def carrega_site(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return response.text
        else:
            return f"Erro ao carregar o site: {response.status_code}"
    except Exception as e:
        return f"Erro ao conectar: {e}"

# Fun√ß√£o para carregar modelo e configurar a API
def carrega_modelo(api_key, tipo_arquivo, arquivos):
    context = "\n".join([carrega_site(url) for url in arquivos])
    system_message = f"""
    Voc√™ √© um assistente chamado Or√°culo, utilizado pela empresa V4 Ferraz Piai & CO.
    Suas informa√ß√µes v√™m das seguintes fontes:\n{context}\n
    Use-as para responder com precis√£o.
    """
    st.session_state['context'] = system_message
    st.session_state['api_key'] = api_key

def pagina_chat():
    st.title("ü§ñ Bem-vindo ao Or√°culo")
    st.divider()

    # Inicializar contexto
    context = st.session_state.get('context', None)
    if context is None:
        st.error("Carregue o Or√°culo antes de iniciar.")
        st.stop()

    # Exibi√ß√£o do hist√≥rico de mensagens
    for mensagem in MEMORIA:
        st.chat_message(mensagem['autor']).markdown(mensagem['conteudo'])

    # Entrada de usu√°rio
    input_usuario = st.chat_input("Fale com o Or√°culo")
    if input_usuario:
        MEMORIA.append({'autor': 'human', 'conteudo': input_usuario})
        st.chat_message("human").markdown(input_usuario)

        # Simula√ß√£o de resposta (substitua com chamada real √† API do Groq)
        resposta = f"Voc√™ perguntou: {input_usuario}. (Simula√ß√£o baseada no contexto fornecido.)"
        MEMORIA.append({'autor': 'ai', 'conteudo': resposta})
        st.chat_message("ai").markdown(resposta)

def sidebar():
    st.sidebar.title("Configura√ß√£o")
    tipo_arquivo = st.sidebar.selectbox("Selecione sua √Årea", TIPOS_ARQUIVOS_VALIDOS)
    arquivos = ARQUIVOS.get(tipo_arquivo, [])
    api_key = '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'

    if st.sidebar.button("Inicializar Or√°culo"):
        carrega_modelo(api_key, tipo_arquivo, arquivos)
    if st.sidebar.button("Apagar Hist√≥rico"):
        MEMORIA.clear()

def main():
    sidebar()
    pagina_chat()

if __name__ == "__main__":
    main()
